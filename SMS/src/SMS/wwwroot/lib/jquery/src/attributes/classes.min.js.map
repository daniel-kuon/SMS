{"version":3,"sources":["wwwroot/lib/jquery/src/attributes/classes.js"],"names":["define","jQuery","rnotwhite","dataPriv","getClass","elem","getAttribute","rclass","fn","extend","addClass","value","classes","cur","curValue","clazz","j","finalValue","i","isFunction","this","each","call","match","nodeType","replace","indexOf","trim","setAttribute","removeClass","arguments","length","attr","toggleClass","stateVal","type","className","self","classNames","hasClass","undefined","set","get","selector"],"mappings":"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","file":"wwwroot/lib/jquery/src/attributes/classes.min.js","sourcesContent":["define( [\r\n\t\"../core\",\r\n\t\"../var/rnotwhite\",\r\n\t\"../data/var/dataPriv\",\r\n\t\"../core/init\"\r\n], function( jQuery, rnotwhite, dataPriv ) {\r\n\r\nvar rclass = /[\\t\\r\\n\\f]/g;\r\n\r\nfunction getClass( elem ) {\r\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\r\n}\r\n\r\njQuery.fn.extend( {\r\n\taddClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\r\n\t\t\t\t\t\t\tcur += clazz + \" \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tremoveClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this.attr( \"class\", \"\" );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\r\n\t\t\t\t// This expression is here for better compressibility (see addClass)\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\r\n\t\t\t\t\t\t// Remove *all* instances\r\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\r\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoggleClass: function( value, stateVal ) {\r\n\t\tvar type = typeof value;\r\n\r\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\r\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).toggleClass(\r\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\r\n\t\t\t\t\tstateVal\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar className, i, self, classNames;\r\n\r\n\t\t\tif ( type === \"string\" ) {\r\n\r\n\t\t\t\t// Toggle individual class names\r\n\t\t\t\ti = 0;\r\n\t\t\t\tself = jQuery( this );\r\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\r\n\r\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\r\n\r\n\t\t\t\t\t// Check each className given, space separated list\r\n\t\t\t\t\tif ( self.hasClass( className ) ) {\r\n\t\t\t\t\t\tself.removeClass( className );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.addClass( className );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t// Toggle whole class name\r\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\r\n\t\t\t\tclassName = getClass( this );\r\n\t\t\t\tif ( className ) {\r\n\r\n\t\t\t\t\t// Store className if set\r\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the element has a class name or if we're passed `false`,\r\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\r\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\r\n\t\t\t\t// falling back to the empty string if nothing was stored.\r\n\t\t\t\tif ( this.setAttribute ) {\r\n\t\t\t\t\tthis.setAttribute( \"class\",\r\n\t\t\t\t\t\tclassName || value === false ?\r\n\t\t\t\t\t\t\"\" :\r\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\thasClass: function( selector ) {\r\n\t\tvar className, elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tclassName = \" \" + selector + \" \";\r\n\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\tif ( elem.nodeType === 1 &&\r\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\r\n\t\t\t\t\t.indexOf( className ) > -1\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n} );\r\n\r\n} );\r\n"],"sourceRoot":"/source/"}