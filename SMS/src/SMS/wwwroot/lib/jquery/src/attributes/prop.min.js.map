{"version":3,"sources":["wwwroot/lib/jquery/src/attributes/prop.js"],"names":["define","jQuery","access","support","rfocusable","rclickable","fn","extend","prop","name","value","this","arguments","length","removeProp","each","propFix","elem","ret","hooks","nType","nodeType","isXMLDoc","propHooks","undefined","set","get","tabIndex","tabindex","find","attr","parseInt","test","nodeName","href","for","class","optSelected","selected","parent","parentNode","selectedIndex","toLowerCase"],"mappings":"AAAAA,QACC,UACA,iBACA,YACA,eACE,SAAUC,EAAQC,EAAQC,GAE7B,GAAIC,GAAa,sCAChBC,EAAa,eAEdJ,GAAOK,GAAGC,QACTC,KAAM,SAAUC,EAAMC,GACrB,MAAOR,GAAQS,KAAMV,EAAOO,KAAMC,EAAMC,EAAOE,UAAUC,OAAS,IAGnEC,WAAY,SAAUL,GACrB,MAAOE,MAAKI,KAAM,iBACVJ,MAAMV,EAAOe,QAASP,IAAUA,QAK1CR,EAAOM,QACNC,KAAM,SAAUS,EAAMR,EAAMC,GAC3B,GAAIQ,GAAKC,EACRC,EAAQH,EAAKI,QAGd,IAAe,IAAVD,GAAyB,IAAVA,GAAyB,IAAVA,EAWnC,MAPe,KAAVA,GAAgBnB,EAAOqB,SAAUL,KAGrCR,EAAOR,EAAOe,QAASP,IAAUA,EACjCU,EAAQlB,EAAOsB,UAAWd,IAGZe,SAAVd,EACCS,GAAS,OAASA,IACuBK,UAA3CN,EAAMC,EAAMM,IAAKR,EAAMP,EAAOD,IACzBS,EAGCD,EAAMR,GAASC,EAGpBS,GAAS,OAASA,IAA+C,QAApCD,EAAMC,EAAMO,IAAKT,EAAMR,IACjDS,EAGDD,EAAMR,IAGdc,WACCI,UACCD,IAAK,SAAUT,GAMd,GAAIW,GAAW3B,EAAO4B,KAAKC,KAAMb,EAAM,WAEvC,OAAOW,GACNG,SAAUH,EAAU,IACpBxB,EAAW4B,KAAMf,EAAKgB,WACrB5B,EAAW2B,KAAMf,EAAKgB,WAAchB,EAAKiB,KACxC,EACA,MAKNlB,SACCmB,MAAO,UACPC,QAAS,eAULjC,EAAQkC,cACbpC,EAAOsB,UAAUe,UAChBZ,IAAK,SAAUT,GACd,GAAIsB,GAAStB,EAAKuB,UAIlB,OAHKD,IAAUA,EAAOC,YACrBD,EAAOC,WAAWC,cAEZ,MAERhB,IAAK,SAAUR,GACd,GAAIsB,GAAStB,EAAKuB,UACbD,KACJA,EAAOE,cAEFF,EAAOC,YACXD,EAAOC,WAAWC,kBAOvBxC,EAAOc,MACN,WACA,WACA,YACA,cACA,cACA,UACA,UACA,SACA,cACA,mBACE,WACFd,EAAOe,QAASL,KAAK+B,eAAkB/B","file":"wwwroot/lib/jquery/src/attributes/prop.min.js","sourcesContent":["define( [\r\n\t\"../core\",\r\n\t\"../core/access\",\r\n\t\"./support\",\r\n\t\"../selector\"\r\n], function( jQuery, access, support ) {\r\n\r\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\r\n\trclickable = /^(?:a|area)$/i;\r\n\r\njQuery.fn.extend( {\r\n\tprop: function( name, value ) {\r\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveProp: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tprop: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set properties on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// Fix name and attach hooks\r\n\t\t\tname = jQuery.propFix[ name ] || name;\r\n\t\t\thooks = jQuery.propHooks[ name ];\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn ( elem[ name ] = value );\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\treturn elem[ name ];\r\n\t},\r\n\r\n\tpropHooks: {\r\n\t\ttabIndex: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// elem.tabIndex doesn't always return the\r\n\t\t\t\t// correct value when it hasn't been explicitly set\r\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n\t\t\t\t// Use proper attribute retrieval(#12072)\r\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\r\n\r\n\t\t\t\treturn tabindex ?\r\n\t\t\t\t\tparseInt( tabindex, 10 ) :\r\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\r\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\r\n\t\t\t\t\t\t\t0 :\r\n\t\t\t\t\t\t\t-1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpropFix: {\r\n\t\t\"for\": \"htmlFor\",\r\n\t\t\"class\": \"className\"\r\n\t}\r\n} );\r\n\r\n// Support: IE <=11 only\r\n// Accessing the selectedIndex property\r\n// forces the browser to respect setting selected\r\n// on the option\r\n// The getter ensures a default option is selected\r\n// when in an optgroup\r\nif ( !support.optSelected ) {\r\n\tjQuery.propHooks.selected = {\r\n\t\tget: function( elem ) {\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent && parent.parentNode ) {\r\n\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tset: function( elem ) {\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent ) {\r\n\t\t\t\tparent.selectedIndex;\r\n\r\n\t\t\t\tif ( parent.parentNode ) {\r\n\t\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\njQuery.each( [\r\n\t\"tabIndex\",\r\n\t\"readOnly\",\r\n\t\"maxLength\",\r\n\t\"cellSpacing\",\r\n\t\"cellPadding\",\r\n\t\"rowSpan\",\r\n\t\"colSpan\",\r\n\t\"useMap\",\r\n\t\"frameBorder\",\r\n\t\"contentEditable\"\r\n], function() {\r\n\tjQuery.propFix[ this.toLowerCase() ] = this;\r\n} );\r\n\r\n} );\r\n"],"sourceRoot":"/source/"}