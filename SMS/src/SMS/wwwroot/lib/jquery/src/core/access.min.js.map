{"version":3,"sources":["wwwroot/lib/jquery/src/core/access.js"],"names":["define","jQuery","access","elems","fn","key","value","chainable","emptyGet","raw","i","len","length","bulk","type","undefined","isFunction","call","elem"],"mappings":"AAAAA,QACC,WACE,SAAUC,GAIb,GAAIC,GAAS,SAAUC,EAAOC,EAAIC,EAAKC,EAAOC,EAAWC,EAAUC,GAClE,GAAIC,GAAI,EACPC,EAAMR,EAAMS,OACZC,EAAc,MAAPR,CAGR,IAA4B,WAAvBJ,EAAOa,KAAMT,GAAqB,CACtCE,GAAY,CACZ,KAAMG,IAAKL,GACVH,EAAQC,EAAOC,EAAIM,EAAGL,EAAKK,IAAK,EAAMF,EAAUC,OAI3C,IAAeM,SAAVT,IACXC,GAAY,EAENN,EAAOe,WAAYV,KACxBG,GAAM,GAGFI,IAGCJ,GACJL,EAAGa,KAAMd,EAAOG,GAChBF,EAAK,OAILS,EAAOT,EACPA,EAAK,SAAUc,EAAMb,EAAKC,GACzB,MAAOO,GAAKI,KAAMhB,EAAQiB,GAAQZ,MAKhCF,GACJ,KAAYO,EAAJD,EAASA,IAChBN,EACCD,EAAOO,GAAKL,EAAKI,EACjBH,EACAA,EAAMW,KAAMd,EAAOO,GAAKA,EAAGN,EAAID,EAAOO,GAAKL,IAM/C,OAAOE,GACNJ,EAGAU,EACCT,EAAGa,KAAMd,GACTQ,EAAMP,EAAID,EAAO,GAAKE,GAAQG,EAGjC,OAAON","file":"wwwroot/lib/jquery/src/core/access.min.js","sourcesContent":["define( [\r\n\t\"../core\"\r\n], function( jQuery ) {\r\n\r\n// Multifunctional method to get and set values of a collection\r\n// The value/s can optionally be executed if it's a function\r\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n\tvar i = 0,\r\n\t\tlen = elems.length,\r\n\t\tbulk = key == null;\r\n\r\n\t// Sets many values\r\n\tif ( jQuery.type( key ) === \"object\" ) {\r\n\t\tchainable = true;\r\n\t\tfor ( i in key ) {\r\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\r\n\t\t}\r\n\r\n\t// Sets one value\r\n\t} else if ( value !== undefined ) {\r\n\t\tchainable = true;\r\n\r\n\t\tif ( !jQuery.isFunction( value ) ) {\r\n\t\t\traw = true;\r\n\t\t}\r\n\r\n\t\tif ( bulk ) {\r\n\r\n\t\t\t// Bulk operations run against the entire set\r\n\t\t\tif ( raw ) {\r\n\t\t\t\tfn.call( elems, value );\r\n\t\t\t\tfn = null;\r\n\r\n\t\t\t// ...except when executing function values\r\n\t\t\t} else {\r\n\t\t\t\tbulk = fn;\r\n\t\t\t\tfn = function( elem, key, value ) {\r\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\tfn(\r\n\t\t\t\t\telems[ i ], key, raw ?\r\n\t\t\t\t\tvalue :\r\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn chainable ?\r\n\t\telems :\r\n\r\n\t\t// Gets\r\n\t\tbulk ?\r\n\t\t\tfn.call( elems ) :\r\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\r\n};\r\n\r\nreturn access;\r\n\r\n} );\r\n"],"sourceRoot":"/source/"}