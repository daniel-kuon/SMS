{"version":3,"sources":["wwwroot/lib/jquery/src/core/ready.js"],"names":["define","jQuery","document","completed","removeEventListener","window","ready","readyList","fn","promise","done","this","extend","isReady","readyWait","holdReady","hold","wait","resolveWith","triggerHandler","off","obj","Deferred","readyState","documentElement","doScroll","setTimeout","addEventListener"],"mappings":"AAAAA,QACC,UACA,kBACA,eACA,eACE,SAAUC,EAAQC,GA6DrB,QAASC,KACRD,EAASE,oBAAqB,mBAAoBD,GAClDE,OAAOD,oBAAqB,OAAQD,GACpCF,EAAOK,QA7DR,GAAIC,EAEJN,GAAOO,GAAGF,MAAQ,SAAUE,GAK3B,MAFAP,GAAOK,MAAMG,UAAUC,KAAMF,GAEtBG,MAGRV,EAAOW,QAGNC,SAAS,EAITC,UAAW,EAGXC,UAAW,SAAUC,GACfA,EACJf,EAAOa,YAEPb,EAAOK,OAAO,IAKhBA,MAAO,SAAUW,IAGXA,KAAS,IAAShB,EAAOa,UAAYb,EAAOY,WAKjDZ,EAAOY,SAAU,EAGZI,KAAS,KAAUhB,EAAOa,UAAY,IAK3CP,EAAUW,YAAahB,GAAYD,IAG9BA,EAAOO,GAAGW,iBACdlB,EAAQC,GAAWiB,eAAgB,SACnClB,EAAQC,GAAWkB,IAAK,eAc3BnB,EAAOK,MAAMG,QAAU,SAAUY,GAwBhC,MAvBMd,KAELA,EAAYN,EAAOqB,WAMU,aAAxBpB,EAASqB,YACa,YAAxBrB,EAASqB,aAA6BrB,EAASsB,gBAAgBC,SAGjEpB,OAAOqB,WAAYzB,EAAOK,QAK1BJ,EAASyB,iBAAkB,mBAAoBxB,GAG/CE,OAAOsB,iBAAkB,OAAQxB,KAG5BI,EAAUE,QAASY,IAI3BpB,EAAOK,MAAMG","file":"wwwroot/lib/jquery/src/core/ready.min.js","sourcesContent":["define( [\r\n\t\"../core\",\r\n\t\"../var/document\",\r\n\t\"../core/init\",\r\n\t\"../deferred\"\r\n], function( jQuery, document ) {\r\n\r\n// The deferred used on DOM ready\r\nvar readyList;\r\n\r\njQuery.fn.ready = function( fn ) {\r\n\r\n\t// Add the callback\r\n\tjQuery.ready.promise().done( fn );\r\n\r\n\treturn this;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Is the DOM ready to be used? Set to true once it occurs.\r\n\tisReady: false,\r\n\r\n\t// A counter to track how many items to wait for before\r\n\t// the ready event fires. See #6781\r\n\treadyWait: 1,\r\n\r\n\t// Hold (or release) the ready event\r\n\tholdReady: function( hold ) {\r\n\t\tif ( hold ) {\r\n\t\t\tjQuery.readyWait++;\r\n\t\t} else {\r\n\t\t\tjQuery.ready( true );\r\n\t\t}\r\n\t},\r\n\r\n\t// Handle when the DOM is ready\r\n\tready: function( wait ) {\r\n\r\n\t\t// Abort if there are pending holds or we're already ready\r\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remember that the DOM is ready\r\n\t\tjQuery.isReady = true;\r\n\r\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are functions bound, to execute\r\n\t\treadyList.resolveWith( document, [ jQuery ] );\r\n\r\n\t\t// Trigger any bound ready events\r\n\t\tif ( jQuery.fn.triggerHandler ) {\r\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\r\n\t\t\tjQuery( document ).off( \"ready\" );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n/**\r\n * The ready event handler and self cleanup method\r\n */\r\nfunction completed() {\r\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\r\n\twindow.removeEventListener( \"load\", completed );\r\n\tjQuery.ready();\r\n}\r\n\r\njQuery.ready.promise = function( obj ) {\r\n\tif ( !readyList ) {\r\n\r\n\t\treadyList = jQuery.Deferred();\r\n\r\n\t\t// Catch cases where $(document).ready() is called\r\n\t\t// after the browser event has already occurred.\r\n\t\t// Support: IE9-10 only\r\n\t\t// Older IE sometimes signals \"interactive\" too soon\r\n\t\tif ( document.readyState === \"complete\" ||\r\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\r\n\r\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n\t\t\twindow.setTimeout( jQuery.ready );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Use the handy event callback\r\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\r\n\r\n\t\t\t// A fallback to window.onload, that will always work\r\n\t\t\twindow.addEventListener( \"load\", completed );\r\n\t\t}\r\n\t}\r\n\treturn readyList.promise( obj );\r\n};\r\n\r\n// Kick off the DOM ready check even if the user does not\r\njQuery.ready.promise();\r\n\r\n} );\r\n"],"sourceRoot":"/source/"}