{"version":3,"sources":["wwwroot/lib/jquery/src/css/adjustCSS.js"],"names":["define","jQuery","rcssNum","adjustCSS","elem","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","cur","css","initial","unit","cssNumber","initialInUnit","exec","style","start","end"],"mappings":"AAAAA,QACC,UACA,kBACE,SAAUC,EAAQC,GAErB,QAASC,GAAWC,EAAMC,EAAMC,EAAYC,GAC3C,GAAIC,GACHC,EAAQ,EACRC,EAAgB,GAChBC,EAAeJ,EACd,WAAa,MAAOA,GAAMK,OAC1B,WAAa,MAAOX,GAAOY,IAAKT,EAAMC,EAAM,KAC7CS,EAAUH,IACVI,EAAOT,GAAcA,EAAY,KAASL,EAAOe,UAAWX,GAAS,GAAK,MAG1EY,GAAkBhB,EAAOe,UAAWX,IAAmB,OAATU,IAAkBD,IAC/DZ,EAAQgB,KAAMjB,EAAOY,IAAKT,EAAMC,GAElC,IAAKY,GAAiBA,EAAe,KAAQF,EAAO,CAGnDA,EAAOA,GAAQE,EAAe,GAG9BX,EAAaA,MAGbW,GAAiBH,GAAW,CAE5B,GAICL,GAAQA,GAAS,KAGjBQ,GAAgCR,EAChCR,EAAOkB,MAAOf,EAAMC,EAAMY,EAAgBF,SAK1CN,KAAYA,EAAQE,IAAiBG,IAAuB,IAAVL,KAAiBC,GAiBrE,MAbKJ,KACJW,GAAiBA,IAAkBH,GAAW,EAG9CN,EAAWF,EAAY,GACtBW,GAAkBX,EAAY,GAAM,GAAMA,EAAY,IACrDA,EAAY,GACTC,IACJA,EAAMQ,KAAOA,EACbR,EAAMa,MAAQH,EACdV,EAAMc,IAAMb,IAGPA,EAGR,MAAOL","file":"wwwroot/lib/jquery/src/css/adjustCSS.min.js","sourcesContent":["define( [\r\n\t\"../core\",\r\n\t\"../var/rcssNum\"\r\n], function( jQuery, rcssNum ) {\r\n\r\nfunction adjustCSS( elem, prop, valueParts, tween ) {\r\n\tvar adjusted,\r\n\t\tscale = 1,\r\n\t\tmaxIterations = 20,\r\n\t\tcurrentValue = tween ?\r\n\t\t\tfunction() { return tween.cur(); } :\r\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\r\n\t\tinitial = currentValue(),\r\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\r\n\r\n\t\t// Starting value computation is required for potential unit mismatches\r\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\r\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\r\n\r\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\r\n\r\n\t\t// Trust units reported by jQuery.css\r\n\t\tunit = unit || initialInUnit[ 3 ];\r\n\r\n\t\t// Make sure we update the tween properties later on\r\n\t\tvalueParts = valueParts || [];\r\n\r\n\t\t// Iteratively approximate from a nonzero starting point\r\n\t\tinitialInUnit = +initial || 1;\r\n\r\n\t\tdo {\r\n\r\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\r\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\r\n\t\t\tscale = scale || \".5\";\r\n\r\n\t\t\t// Adjust and apply\r\n\t\t\tinitialInUnit = initialInUnit / scale;\r\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\r\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\r\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\r\n\t\t} while (\r\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\r\n\t\t);\r\n\t}\r\n\r\n\tif ( valueParts ) {\r\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\r\n\r\n\t\t// Apply relative offset (+=/-=) if specified\r\n\t\tadjusted = valueParts[ 1 ] ?\r\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\r\n\t\t\t+valueParts[ 2 ];\r\n\t\tif ( tween ) {\r\n\t\t\ttween.unit = unit;\r\n\t\t\ttween.start = initialInUnit;\r\n\t\t\ttween.end = adjusted;\r\n\t\t}\r\n\t}\r\n\treturn adjusted;\r\n}\r\n\r\nreturn adjustCSS;\r\n} );\r\n"],"sourceRoot":"/source/"}