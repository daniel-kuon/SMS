{"version":3,"sources":["wwwroot/lib/bootstrap-multiselect/tests/spec/bootstrap-multiselect.js"],"names":["describe","beforeEach","$select","$","i","$option","prop","append","multiselect","buttonContainer","it","expect","length","toBe","undefined","toString","trigger","click","afterEach","remove","each","this","$optgroup","j","enableClickableOptGroups","options","label","value","selected","title","attr","closest","optgroups","children","onSelectAllTriggered","onDeselectAllTriggered","includeSelectAllOption","selectAllValue","onSelectAll","onDeselectAll","selection","document","getSelection","range","createRange","$selection","selectNodeContents","get","removeAllRanges","addRange","type","find"],"mappings":"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","file":"wwwroot/lib/bootstrap-multiselect/tests/spec/bootstrap-multiselect.min.js","sourcesContent":["describe('Bootstrap Multiselect \"Core\".', function() {\r\n    beforeEach(function() {\r\n        var $select = $('<select id=\"multiselect\" multiple=\"multiple\"></select>');\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            var $option = $('<option value=\"' + i + '\">' + i + '</option>');\r\n            \r\n            if (i < 10) {\r\n                $option.prop('selected', true);\r\n            }\r\n            \r\n            $select.append($option);\r\n        }\r\n        \r\n        $('body').append($select);\r\n        \r\n        $select.multiselect({\r\n            buttonContainer: '<div id=\"multiselect-container\"></div>'\r\n        });\r\n    });\r\n    \r\n    it('Should add the container after the select.', function() {\r\n        expect($('#multiselect-container').length).toBe(1);\r\n    });\r\n    \r\n    it('Should add the multiselect button.', function() {\r\n        expect($('#multiselect-container .multiselect').length).toBe(1);\r\n    });\r\n    \r\n    it('Should add the dropdown menu.', function() {\r\n        expect($('#multiselect-container .dropdown-menu').length).toBe(1);\r\n    });\r\n    \r\n    it('Should add an li element with checkbox and label for each option.', function() {\r\n        expect($('#multiselect-container li').length).toBe(99);\r\n        expect($('#multiselect-container label').length).toBe(99);\r\n        expect($('#multiselect-container input[type=\"checkbox\"]').length).toBe(99);\r\n    });\r\n    \r\n    it('Should preserve selected options.', function() {\r\n        expect($('#multiselect-container input[type=\"checkbox\"]:checked').length).toBe(9);\r\n        expect($('#multiselect option:selected').length).toBe(9);\r\n    });\r\n    \r\n    it('Should be able to select options by value.', function() {\r\n        $('#multiselect').multiselect('select', '10');\r\n        \r\n        expect($('#multiselect option[value=\"10\"]').prop('selected')).toBe(true);\r\n        expect($('#multiselect-container input[value=\"10\"]').prop('checked')).toBe(true);\r\n    });\r\n    \r\n    it('Select method should handle \"null\" and \"undefined\" correctly.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(9);\r\n        \r\n        $('#multiselect').multiselect('select', null);\r\n        expect($('#multiselect option:selected').length).toBe(9);\r\n        \r\n        $('#multiselect').multiselect('select', undefined);\r\n        expect($('#multiselect option:selected').length).toBe(9);\r\n    });\r\n    \r\n    it('Should be able to deselect options by value.', function() {\r\n        $('#multiselect').multiselect('select', '10');\r\n        $('#multiselect').multiselect('deselect', '10');\r\n        \r\n        expect($('#multiselect option[value=\"10\"]').prop('selected')).toBe(false);\r\n        expect($('#multiselect-container input[value=\"10\"]').prop('checked')).toBe(false);\r\n    });\r\n    \r\n    it('Deselect method should handle \"null\" and \"undefined\" correctly.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(9);\r\n        \r\n        $('#multiselect').multiselect('deselect', null);\r\n        expect($('#multiselect option:selected').length).toBe(9);\r\n        \r\n        $('#multiselect').multiselect('deselect', undefined);\r\n        expect($('#multiselect option:selected').length).toBe(9);\r\n    });\r\n    \r\n    it('Should be able to select options using an array of values.', function() {\r\n        $('#multiselect').multiselect('select', ['10', '11']);\r\n        \r\n        expect($('#multiselect option[value=\"10\"]').prop('selected')).toBe(true);\r\n        expect($('#multiselect-container input[value=\"10\"]').prop('checked')).toBe(true);\r\n        \r\n        expect($('#multiselect option[value=\"11\"]').prop('selected')).toBe(true);\r\n        expect($('#multiselect-container input[value=\"11\"]').prop('checked')).toBe(true);\r\n    });\r\n    \r\n    it('Should be able to deselect options using an array of values.', function() {\r\n        $('#multiselect').multiselect('select', ['10', '11']);\r\n        $('#multiselect').multiselect('deselect', ['10', '11']);\r\n        \r\n        expect($('#multiselect option[value=\"10\"]').prop('selected')).toBe(false);\r\n        expect($('#multiselect-container input[value=\"10\"]').prop('checked')).toBe(false);\r\n        \r\n        expect($('#multiselect option[value=\"11\"]').prop('selected')).toBe(false);\r\n        expect($('#multiselect-container input[value=\"11\"]').prop('checked')).toBe(false);\r\n    });\r\n    \r\n    it('Should be able to disable the multiselect', function() {\r\n        $('#multiselect').multiselect('disable');\r\n        \r\n        expect($('#multiselect').prop('disabled')).toBe(true);\r\n    });\r\n    \r\n    it('Should be able to enable the multiselect', function() {\r\n        $('#multiselect').multiselect('disable');\r\n        $('#multiselect').multiselect('enable');\r\n        \r\n        expect($('#multiselect').prop('disabled')).toBe(false);\r\n    });\r\n    \r\n    it('Should be able to select all options.', function() {\r\n        $('#multiselect').multiselect('selectAll');\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            expect($('#multiselect option[value=\"' + i.toString() + '\"]').prop('selected')).toBe(true);\r\n            expect($('#multiselect-container input[value=\"' + i.toString() + '\"]').prop('checked')).toBe(true);\r\n        }\r\n    });\r\n    \r\n    it('Should be able to deselect all options.', function() {\r\n        $('#multiselect').multiselect('selectAll');\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            expect($('#multiselect option[value=\"' + i.toString() + '\"]').prop('selected')).toBe(true);\r\n            expect($('#multiselect-container input[value=\"' + i.toString() + '\"]').prop('checked')).toBe(true);\r\n        }\r\n        \r\n        $('#multiselect').multiselect('deselectAll');\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            expect($('#multiselect option[value=\"' + i.toString() + '\"]').prop('selected')).toBe(false);\r\n            expect($('#multiselect-container input[value=\"' + i.toString() + '\"]').prop('checked')).toBe(false);\r\n        }\r\n    });\r\n    \r\n    it('Should update the checkboxes according to the selected options after using refresh.', function() {\r\n        for (var i = 10; i < 20; i++) {\r\n            $('#multiselect option[value=\"' + i + '\"]').prop('selected', true);\r\n        }\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(19);\r\n        expect($('#multiselect-container input[type=\"checkbox\"]:checked').length).toBe(9);\r\n        \r\n        $('#multiselect').multiselect('refresh');\r\n        \r\n        expect($('#multiselect-container input[type=\"checkbox\"]:checked').length).toBe(19);\r\n        \r\n        for (var i = 10; i < 20; i++) {\r\n            expect($('#multiselect option[value=\"' + i + '\"]').prop('selected')).toBe(true);\r\n        }\r\n    });\r\n    \r\n    it('Should remove container, button and ul after destroy.', function() {\r\n        $('#multiselect').multiselect('destroy');\r\n        \r\n        // Destroy should remove container, button and ul.\r\n        expect($('#multiselect-container.multiselect-container').length).toBe(0);\r\n        expect($('#multiselect-container .multiselect').length).toBe(0);\r\n        expect($('#multiselect-container .dropdown-menu').length).toBe(0);\r\n    });\r\n    \r\n    it('Should select an option when checkbox is changed (change event).', function() {\r\n        $('#multiselect-container li input[value=\"10\"]').prop('checked', true);\r\n        $('#multiselect-container li input[value=\"10\"]').trigger('change');\r\n        \r\n        expect($('#multiselect-container input[value=\"10\"]').prop('checked')).toBe(true);\r\n        expect($('#multiselect option[value=\"10\"]').prop('selected')).toBe(true);\r\n    });\r\n    \r\n    it('Should deselect an option when checkbox is changed (change event).', function() {\r\n        $('#multiselect-container li input[value=\"10\"]').prop('checked', true);\r\n        $('#multiselect-container li input[value=\"10\"]').trigger('change');\r\n        \r\n        // Already checked above.\r\n        \r\n        $('#multiselect-container li input[value=\"10\"]').prop('checked', false);\r\n        $('#multiselect-container li input[value=\"10\"]').trigger('change');\r\n        \r\n        expect($('#multiselect-container input[value=\"10\"]').prop('checked')).toBe(false);\r\n        expect($('#multiselect option[value=\"10\"]').prop('selected')).toBe(false);\r\n    });\r\n    \r\n    it('Should select an option when checkbox is clicked.', function() {\r\n        $('#multiselect-container li input[value=\"10\"]').click();\r\n        \r\n        expect($('#multiselect-container input[value=\"10\"]').prop('checked')).toBe(true);\r\n        expect($('#multiselect option[value=\"10\"]').prop('selected')).toBe(true);\r\n    });\r\n    \r\n    it('Should deselect an option when checkbox is clicked.', function() {\r\n        $('#multiselect-container li input[value=\"10\"]').click();\r\n        $('#multiselect-container li input[value=\"10\"]').click();\r\n        \r\n        expect($('#multiselect-container input[value=\"10\"]').prop('checked')).toBe(false);\r\n        expect($('#multiselect option[value=\"10\"]').prop('selected')).toBe(false);\r\n    });\r\n    \r\n    afterEach(function() {\r\n        $('#multiselect').multiselect('destroy');\r\n        $('#multiselect').remove();\r\n    });\r\n});\r\n\r\ndescribe('Bootstrap Multiselect \"Single Selection\"', function() {\r\n    beforeEach(function() {\r\n        var $select = $('<select id=\"multiselect\"></select>');\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            $select.append('<option value=\"' + i + '\">Option ' + i + '</option>');\r\n        }\r\n        \r\n        $('body').append($select);\r\n        \r\n        $select.multiselect({\r\n            buttonContainer: '<div id=\"multiselect-container\"></div>'\r\n        });\r\n    });\r\n    \r\n    it('Should create radio buttons instead of checkboxes.', function() {\r\n        expect($('#multiselect-container input[type=\"radio\"]').length).toBe(99);\r\n        expect($('#multiselect-container input[type=\"checkbox\"]').length).toBe(0);\r\n        \r\n        // Browser selects one option per default.\r\n        expect($('#multiselect option:selected').length).toBe(1);\r\n    });\r\n    \r\n    it('Only one option at a time can be selected.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(1);\r\n        \r\n        var i = 0;\r\n        $('#multiselect-container input').each(function() {\r\n            if (i === 0) {\r\n                expect($(this).prop('checked')).toBe(true);\r\n                i++;\r\n            }\r\n            else {\r\n                expect($(this).prop('checked')).toBe(false);\r\n                $(this).click();\r\n                \r\n                expect($('#multiselect option:selected').length).toBe(1);\r\n                expect($(this).prop('checked')).toBe(true);\r\n                i++;\r\n            }\r\n        });\r\n    });\r\n    \r\n    afterEach(function() {\r\n        $('#multiselect').multiselect('destroy');\r\n        $('#multiselect').remove();\r\n    });\r\n});\r\n\r\ndescribe('Bootstrap Multiselect \"Optgroups\"', function() {\r\n    beforeEach(function() {\r\n        var $select = $('<select id=\"multiselect\" multiple=\"multiple\"></select>');\r\n        \r\n        for (var i = 1; i < 11; i++) {\r\n            var $optgroup = $('<optgroup label=\"Group ' + i + '\"></optgroup>');\r\n            \r\n            for (var j = 1; j < 11; j++) {\r\n                $optgroup.append('<option value=\"' + i + '-' + j + '\">Option ' + i + '.' + j + '</option>');\r\n            }\r\n            \r\n            $select.append($optgroup);\r\n        }\r\n        \r\n        $('body').append($select);\r\n        \r\n        $select.multiselect({\r\n            buttonContainer: '<div id=\"multiselect-container\"></div>',\r\n            enableClickableOptGroups: true\r\n        });\r\n    });\r\n    \r\n    it('Should correctly create labels for optgroups.', function() {\r\n        expect($('#multiselect-container li.multiselect-group').length).toBe(10);\r\n        expect($('#multiselect-container li.multiselect-group-clickable').length).toBe(10);\r\n        \r\n        $('#multiselect-container label.multiselect-group').each(function() {\r\n            expect($('input', $(this)).length).toBe(10);\r\n        });\r\n    });\r\n    \r\n    it('Groups should be clickable.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        \r\n        var i = 0;\r\n        $('#multiselect-container li.multiselect-group').each(function() {\r\n            $('label', $(this)).click();\r\n            expect($('option:selected', $('#multiselect optgroup')[i]).length).toBe(10);\r\n            expect($('#multiselect option:selected').length).toBe(10);\r\n            \r\n            $('label', $(this)).click();\r\n            i++;\r\n        });\r\n    });\r\n    \r\n    afterEach(function() {\r\n        $('#multiselect').multiselect('destroy');\r\n        $('#multiselect').remove();\r\n    });\r\n});\r\n\r\ndescribe('Bootstrap Multiselect \"Dataprovider\"', function() {\r\n    beforeEach(function() {\r\n        var $select = $('<select id=\"multiselect\" multiple=\"multiple\"></select>');\r\n        \r\n        $('body').append($select);\r\n        \r\n        $select.multiselect({\r\n            buttonContainer: '<div id=\"multiselect-container\"></div>'\r\n        });\r\n    });\r\n    \r\n    var options = [\r\n            {label: 'Option 1', value: '1', selected: true, title: 'Option 1 Title'},\r\n            {label: 'Option 2', value: '2', title: 'Option 2 Title'},\r\n            {label: 'Option 3', value: '3', selected: true, title: 'Option 3 Title'},\r\n            {label: 'Option 4', value: '4', title: 'Option 4 Title'},\r\n            {label: 'Option 5', value: '5', title: 'Option 5 Title'},\r\n            {label: 'Option 6', value: '6', title: 'Option 6 Title'}\r\n        ];\r\n    \r\n    it(\"Should be able to add options.\", function() {\r\n        $('#multiselect').multiselect('dataprovider', options);\r\n        expect($('#multiselect option').length).toBe(6);\r\n        expect($('#multiselect-container input').length).toBe(6);\r\n        \r\n        expect($('#multiselect option[value=\"1\"]').length).toBe(1);\r\n        expect($('#multiselect option[value=\"1\"]').prop('selected')).toBe(true);\r\n        expect($('#multiselect-container input[value=\"1\"]').prop('checked')).toBe(true);\r\n        \r\n        expect($('#multiselect option[value=\"2\"]').length).toBe(1);\r\n        expect($('#multiselect option[value=\"2\"]').prop('selected')).toBe(false);\r\n        expect($('#multiselect-container input[value=\"2\"]').prop('checked')).toBe(false);\r\n        \r\n        expect($('#multiselect option[value=\"3\"]').length).toBe(1);\r\n        expect($('#multiselect option[value=\"3\"]').prop('selected')).toBe(true);\r\n        expect($('#multiselect-container input[value=\"3\"]').prop('checked')).toBe(true);\r\n        \r\n        expect($('#multiselect option[value=\"4\"]').length).toBe(1);\r\n        expect($('#multiselect option[value=\"4\"]').prop('selected')).toBe(false);\r\n        expect($('#multiselect-container input[value=\"4\"]').prop('checked')).toBe(false);\r\n        \r\n        expect($('#multiselect option[value=\"5\"]').length).toBe(1);\r\n        expect($('#multiselect option[value=\"5\"]').prop('selected')).toBe(false);\r\n        expect($('#multiselect-container input[value=\"5\"]').prop('checked')).toBe(false);\r\n        \r\n        expect($('#multiselect option[value=\"6\"]').length).toBe(1);\r\n        expect($('#multiselect option[value=\"6\"]').prop('selected')).toBe(false);\r\n        expect($('#multiselect-container input[value=\"6\"]').prop('checked')).toBe(false);\r\n    });\r\n    \r\n    it(\"Should be able to define title.\", function() {\r\n        $('#multiselect').multiselect('dataprovider', options);\r\n        \r\n        expect($('#multiselect option[value=\"1\"]').attr('title')).toBe('Option 1 Title');\r\n        expect($('#multiselect option[value=\"2\"]').attr('title')).toBe('Option 2 Title');\r\n        expect($('#multiselect option[value=\"3\"]').attr('title')).toBe('Option 3 Title');\r\n        expect($('#multiselect option[value=\"4\"]').attr('title')).toBe('Option 4 Title');\r\n        expect($('#multiselect option[value=\"5\"]').attr('title')).toBe('Option 5 Title');\r\n        expect($('#multiselect option[value=\"6\"]').attr('title')).toBe('Option 6 Title');\r\n        \r\n        expect($('#multiselect-container input[value=\"1\"]').closest('label').attr('title')).toBe('Option 1 Title');\r\n        expect($('#multiselect-container input[value=\"2\"]').closest('label').attr('title')).toBe('Option 2 Title');\r\n        expect($('#multiselect-container input[value=\"3\"]').closest('label').attr('title')).toBe('Option 3 Title');\r\n        expect($('#multiselect-container input[value=\"4\"]').closest('label').attr('title')).toBe('Option 4 Title');\r\n        expect($('#multiselect-container input[value=\"5\"]').closest('label').attr('title')).toBe('Option 5 Title');\r\n        expect($('#multiselect-container input[value=\"6\"]').closest('label').attr('title')).toBe('Option 6 Title');\r\n    });\r\n    \r\n    var optgroups = [\r\n        {\r\n            label: 'Group 1', children: [\r\n                {label: 'Option 1.1', value: '1-1'},\r\n                {label: 'Option 1.2', value: '1-2'},\r\n                {label: 'Option 1.3', value: '1-3'}\r\n            ]\r\n        },\r\n        {\r\n            label: 'Group 2', children: [\r\n                {label: 'Option 2.1', value: '1'},\r\n                {label: 'Option 2.2', value: '2'},\r\n                {label: 'Option 2.3', value: '3'}\r\n            ]\r\n        }\r\n    ];\r\n        \r\n    it('Should be able to handle optgroups.', function() {\r\n        $('#multiselect').multiselect('dataprovider', optgroups);\r\n        \r\n        expect($('#multiselect optgroup').length).toBe(2);\r\n        expect($('#multiselect option').length).toBe(6);\r\n        expect($('#multiselect-container input').length).toBe(6);\r\n        \r\n        expect($('#multiselect optgroup[label=\"Group 1\"] option').length).toBe(3);\r\n        expect($('#multiselect optgroup[label=\"Group 2\"] option').length).toBe(3);\r\n    });\r\n    \r\n    afterEach(function() {\r\n        $('#multiselect').multiselect('destroy');\r\n        $('#multiselect').remove();\r\n    });\r\n});\r\n\r\ndescribe('Bootstrap Multiselect \"Select All\".', function() {\r\n    \r\n    var onSelectAllTriggered = false;\r\n    var onDeselectAllTriggered = false;\r\n    \r\n    beforeEach(function() {\r\n        var $select = $('<select id=\"multiselect\" multiple=\"multiple\"></select>');\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            $select.append('<option value=\"' + i + '\">1</option>');\r\n        }\r\n        \r\n        $('body').append($select);\r\n        \r\n        $select.multiselect({\r\n            buttonContainer: '<div id=\"multiselect-container\"></div>',\r\n            includeSelectAllOption: true,\r\n            selectAllValue: 'multiselect-all',\r\n            onSelectAll: function() {\r\n                onSelectAllTriggered = true;\r\n            },\r\n            onDeselectAll: function() {\r\n                onDeselectAllTriggered = true;\r\n            }\r\n        });\r\n    });\r\n    \r\n    it('Should not add an additional option to the select.', function() {\r\n        expect($('#multiselect option[value=\"multiselect-all\"]').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').length).toBe(1);\r\n        expect($('#multiselect option').length).toBe(99);\r\n        expect($('#multiselect-container input').length).toBe(100);\r\n    });\r\n    \r\n    it('Should update the select all when all options are selected by the \"select\" method.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            $('#multiselect').multiselect('select', i.toString());\r\n            expect($('#multiselect option[value=\"' + i.toString() + '\"]').prop('selected')).toBe(true);\r\n        }\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input').length).toBe(100);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(true);\r\n    });\r\n    \r\n    it('Should update the select all when all options are deselected by the \"deselect\" method (first all options are selected as before).', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            $('#multiselect').multiselect('select', i.toString());\r\n        }\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input:checked').length).toBe(100);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(true);\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            $('#multiselect').multiselect('deselect', i.toString());\r\n        }\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n    });\r\n    \r\n    it('Should update the select all option when all options are selected by the change event.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n        \r\n        // Change all checkboxes except the select all one.\r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').prop('checked', true);\r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').trigger('change');\r\n        \r\n        expect($('#multiselect option:selected[value!=\"multiselect-all\"]').length).toBe(99);\r\n        \r\n        // 100 options seleted including the select all.\r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(true);\r\n    });\r\n    \r\n    it('Should update the select all option when all options are deselected by the change event.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n        \r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').prop('checked', true);\r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').trigger('change');\r\n        \r\n        expect($('#multiselect option:selected[value!=\"multiselect-all\"]').length).toBe(99);\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(true);\r\n        \r\n        // Change all checkboxes except the select all one.\r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').prop('checked', false);\r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').trigger('change');\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n    });\r\n    \r\n    it('Should update the select all option when all options are selected by the click event.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n        \r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').click();\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(true);\r\n    });\r\n    \r\n    it('Should update the select all option when all options are deselected by the click event.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n        \r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').click();\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(true);\r\n        \r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').click();\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n    });\r\n    \r\n    it('Should trigger onSelectAll based on the change event.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n        \r\n        // Change all checkboxes except the select all one.\r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').prop('checked', true);\r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').trigger('change');\r\n        \r\n        expect($('#multiselect option:selected[value!=\"multiselect-all\"]').length).toBe(99);\r\n        \r\n        // 100 options seleted including the select all.\r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(true);\r\n        \r\n        expect(onSelectAllTriggered).toBe(true);\r\n    });\r\n    \r\n    it('Should trigger onSelectAll based on the click event.', function() {\r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(false);\r\n        \r\n        $('#multiselect-container input[value!=\"multiselect-all\"]').click();\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input[value=\"multiselect-all\"]').prop('checked')).toBe(true);\r\n        \r\n        expect(onSelectAllTriggered).toBe(true);\r\n    });\r\n    \r\n    it('Should trigger onSelectAll on function call.', function() {\r\n        $('#multiselect').multiselect('selectAll', true, true);\r\n        expect(onSelectAllTriggered).toBe(true);\r\n    });\r\n    \r\n    afterEach(function() {\r\n        $('#multiselect').multiselect('destroy');\r\n        $('#multiselect').remove();\r\n    });\r\n});\r\n\r\ndescribe('Bootstrap Multiselect Specific Issues', function() {\r\n    \r\n    it('#393', function() {\r\n        var $select = $('<select id=\"multiselect\" multiple=\"multiple\"></select>');\r\n        \r\n        for (var i = 1; i < 100; i++) {\r\n            $select.append('<option value=\"' + i + '\">1</option>');\r\n        }\r\n        \r\n        $('body').append($select);\r\n        \r\n        $select.multiselect({\r\n            buttonContainer: '<div id=\"multiselect-container\"></div>',\r\n            includeSelectAllOption: true,\r\n            selectAllValue: 0\r\n        });\r\n        \r\n        expect($('#multiselect-container input[value=\"0\"]').length).toBe(1);\r\n        expect($('#multiselect-container input[value=\"0\"]').prop('checked')).toBe(false);\r\n        \r\n        $('#multiselect').multiselect('selectAll');\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input[value=\"0\"]').prop('checked')).toBe(true);\r\n        \r\n        $('#multiselect').multiselect('deselectAll');\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"0\"]').prop('checked')).toBe(false);\r\n        \r\n        $('#multiselect-container input[value=\"0\"]').click();\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(99);\r\n        expect($('#multiselect-container input[value=\"0\"]').prop('checked')).toBe(true);\r\n        \r\n        $('#multiselect-container input[value=\"0\"]').click();\r\n        \r\n        expect($('#multiselect option:selected').length).toBe(0);\r\n        expect($('#multiselect-container input[value=\"0\"]').prop('checked')).toBe(false);\r\n        \r\n        $('#multiselect').multiselect('destroy');\r\n        $('#multiselect').remove();\r\n    });\r\n\r\n    it('#405', function() {\r\n        var selection = document.getSelection();\r\n        var range = document.createRange();\r\n        var $selection = $('<span>Some text to select</span>');\r\n        var $select = $('<select id=\"multiselect\" multiple=\"multiple\"></select>');\r\n\r\n        for (var i = 1; i < 5; i++) {\r\n            $select.append('<option value=\"' + i + '\">select option</option>');\r\n        }\r\n\r\n        $('body').append($selection).append($select);\r\n\r\n        $select.multiselect({\r\n            buttonContainer: '<div id=\"multiselect-container\"></div>',\r\n        });\r\n\r\n        range.selectNodeContents($selection.get(0));\r\n\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        if (document.getSelection().type === 'Range') {\r\n            $('#multiselect-container').find('a:first label').trigger('click');\r\n            expect($('#multiselect-container').find('input:first').prop('checked')).toBe(true);\r\n        }\r\n\r\n        $('#multiselect').multiselect('destroy');\r\n        $('#multiselect').remove();\r\n        $selection.remove();\r\n    });\r\n});\r\n"],"sourceRoot":"/source/"}