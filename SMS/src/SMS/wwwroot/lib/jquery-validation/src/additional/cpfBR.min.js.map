{"version":3,"sources":["wwwroot/lib/jquery-validation/src/additional/cpfBR.js"],"names":["$","validator","addMethod","value","replace","length","firstCN","secondCN","checkResult","i","sum","parseInt","substring","cn","result"],"mappings":"AAIAA,EAAEC,UAAUC,UAAW,QAAS,SAAUC,GAMzC,GAHAA,EAAQA,EAAMC,QAAS,8CAA+C,IAGhD,KAAjBD,EAAME,OACV,OAAO,CAGR,IACCC,GAASC,EAAUC,EAAaC,EAD7BC,EAAM,CAeV,IAZAJ,EAAUK,SAAUR,EAAMS,UAAW,EAAG,IAAM,IAC9CL,EAAWI,SAAUR,EAAMS,UAAW,GAAI,IAAM,IAEhDJ,EAAc,SAAUE,EAAKG,GAC5B,GAAIC,GAAiB,GAANJ,EAAa,EAI5B,OAHkB,MAAXI,GAAgC,KAAXA,IAC3BA,EAAS,GAEDA,IAAWD,GAIN,KAAVV,GACM,gBAAVA,GACU,gBAAVA,GACU,gBAAVA,GACU,gBAAVA,GACU,gBAAVA,GACU,gBAAVA,GACU,gBAAVA,GACU,gBAAVA,GACU,gBAAVA,GACU,gBAAVA,EAEA,OAAO,CAIR,KAAMM,EAAI,EAAQ,GAALA,EAAQA,IACpBC,GAAYC,SAAUR,EAAMS,UAAWH,EAAI,EAAGA,GAAK,KAAS,GAAKA,EAIlE,IAAKD,EAAaE,EAAKJ,GAAY,CAElC,IADAI,EAAM,EACAD,EAAI,EAAQ,IAALA,EAASA,IACrBC,GAAYC,SAAUR,EAAMS,UAAWH,EAAI,EAAGA,GAAK,KAAS,GAAKA,EAElE,OAAOD,GAAaE,EAAKH,GAE1B,OAAO,GAEL","file":"wwwroot/lib/jquery-validation/src/additional/cpfBR.min.js","sourcesContent":["/*\n * Brazillian CPF number (Cadastrado de Pessoas FÃ­sicas) is the equivalent of a Brazilian tax registration number.\n * CPF numbers have 11 digits in total: 9 numbers followed by 2 check numbers that are being used for validation.\n */\n$.validator.addMethod( \"cpfBR\", function( value ) {\n\n\t// Removing special characters from value\n\tvalue = value.replace( /([~!@#$%^&*()_+=`{}\\[\\]\\-|\\\\:;'<>,.\\/? ])+/g, \"\" );\n\n\t// Checking value to have 11 digits only\n\tif ( value.length !== 11 ) {\n\t\treturn false;\n\t}\n\n\tvar sum = 0,\n\t\tfirstCN, secondCN, checkResult, i;\n\n\tfirstCN = parseInt( value.substring( 9, 10 ), 10 );\n\tsecondCN = parseInt( value.substring( 10, 11 ), 10 );\n\n\tcheckResult = function( sum, cn ) {\n\t\tvar result = ( sum * 10 ) % 11;\n\t\tif ( ( result === 10 ) || ( result === 11 ) ) {\n\t\t\tresult = 0;\n\t\t}\n\t\treturn ( result === cn );\n\t};\n\n\t// Checking for dump data\n\tif ( value === \"\" ||\n\t\tvalue === \"00000000000\" ||\n\t\tvalue === \"11111111111\" ||\n\t\tvalue === \"22222222222\" ||\n\t\tvalue === \"33333333333\" ||\n\t\tvalue === \"44444444444\" ||\n\t\tvalue === \"55555555555\" ||\n\t\tvalue === \"66666666666\" ||\n\t\tvalue === \"77777777777\" ||\n\t\tvalue === \"88888888888\" ||\n\t\tvalue === \"99999999999\"\n\t) {\n\t\treturn false;\n\t}\n\n\t// Step 1 - using first Check Number:\n\tfor ( i = 1; i <= 9; i++ ) {\n\t\tsum = sum + parseInt( value.substring( i - 1, i ), 10 ) * ( 11 - i );\n\t}\n\n\t// If first Check Number (CN) is valid, move to Step 2 - using second Check Number:\n\tif ( checkResult( sum, firstCN ) ) {\n\t\tsum = 0;\n\t\tfor ( i = 1; i <= 10; i++ ) {\n\t\t\tsum = sum + parseInt( value.substring( i - 1, i ), 10 ) * ( 12 - i );\n\t\t}\n\t\treturn checkResult( sum, secondCN );\n\t}\n\treturn false;\n\n}, \"Please specify a valid CPF number\" );\n"],"sourceRoot":"/source/"}