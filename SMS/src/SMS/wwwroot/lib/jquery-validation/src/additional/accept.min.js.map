{"version":3,"sources":["wwwroot/lib/jquery-validation/src/additional/accept.js"],"names":["$","validator","addMethod","value","element","param","i","file","regex","typeParam","replace","optionalValue","this","optional","attr","files","length","RegExp","type","match","format"],"mappings":"AACAA,EAAEC,UAAUC,UAAW,SAAU,SAAUC,EAAOC,EAASC,GAG1D,GAEAC,GAAGC,EAAMC,EAFLC,EAA6B,gBAAVJ,GAAqBA,EAAMK,QAAS,MAAO,IAAO,UACzEC,EAAgBC,KAAKC,SAAUT,EAI/B,IAAKO,EACJ,MAAOA,EAGR,IAAqC,SAAhCX,EAAGI,GAAUU,KAAM,UAKvBL,EAAYA,EAAUC,QAAS,oCAAqC,QAASA,QAAS,KAAM,KAAMA,QAAS,KAAO,OAG7GN,EAAQW,OAASX,EAAQW,MAAMC,QAEnC,IADAR,EAAQ,GAAIS,QAAQ,MAAQR,EAAY,KAAM,KACxCH,EAAI,EAAGA,EAAIF,EAAQW,MAAMC,OAAQV,IAItC,GAHAC,EAAOH,EAAQW,MAAOT,IAGhBC,EAAKW,KAAKC,MAAOX,GACtB,OAAO,CAQX,QAAO,GACLR,EAAEC,UAAUmB,OAAQ","file":"wwwroot/lib/jquery-validation/src/additional/accept.min.js","sourcesContent":["// Accept a value from a file input based on a required mimetype\n$.validator.addMethod( \"accept\", function( value, element, param ) {\n\n\t// Split mime on commas in case we have multiple types we can accept\n\tvar typeParam = typeof param === \"string\" ? param.replace( /\\s/g, \"\" ) : \"image/*\",\n\toptionalValue = this.optional( element ),\n\ti, file, regex;\n\n\t// Element is optional\n\tif ( optionalValue ) {\n\t\treturn optionalValue;\n\t}\n\n\tif ( $( element ).attr( \"type\" ) === \"file\" ) {\n\n\t\t// Escape string to be used in the regex\n\t\t// see: http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n\t\t// Escape also \"/*\" as \"/.*\" as a wildcard\n\t\ttypeParam = typeParam.replace( /[\\-\\[\\]\\/\\{\\}\\(\\)\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\" ).replace( /,/g, \"|\" ).replace( \"\\/*\", \"/.*\" );\n\n\t\t// Check if the element has a FileList before checking each file\n\t\tif ( element.files && element.files.length ) {\n\t\t\tregex = new RegExp( \".?(\" + typeParam + \")$\", \"i\" );\n\t\t\tfor ( i = 0; i < element.files.length; i++ ) {\n\t\t\t\tfile = element.files[ i ];\n\n\t\t\t\t// Grab the mimetype from the loaded file, verify it matches\n\t\t\t\tif ( !file.type.match( regex ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Either return true because we've validated each file, or because the\n\t// browser does not support element.files and the FileList feature\n\treturn true;\n}, $.validator.format( \"Please enter a value with a valid mimetype.\" ) );\n"],"sourceRoot":"/source/"}