{"version":3,"sources":["wwwroot/js/daterangepicker-ko.js"],"names":[],"mappings":"","file":"wwwroot/js/daterangepicker-ko.min.js","sourcesContent":["//(function ($, ko, moment, undefined) {\r\n\r\n//    //#region Utils\r\n\r\n//    var detectDataType = function (value) {\r\n//        for (var fname in detectDataType.typeDetection) {\r\n//            var f = detectDataType[fname];\r\n//            if (f(value)) {\r\n//                return detectDataType.typeDetection[fname];\r\n//            }\r\n//        }\r\n//        return null;\r\n//    };\r\n\r\n//    detectDataType.isString = function (value) {\r\n//        return typeof value === 'string';\r\n//    };\r\n//    detectDataType.isDate = function (value) {\r\n//        return typeof value === 'object' && Object.prototype.toString.call(value) === \"[object Date]\";\r\n//    };\r\n//    detectDataType.isMoment = function (value) {\r\n//        return moment.isMoment(value);\r\n//    };\r\n//    detectDataType.typeDetection = {\r\n//        \"isMoment\": \"moment\",\r\n//        \"isString\": \"string\",\r\n//        \"isDate\": \"date\"\r\n//    };\r\n\r\n//    var elBinder = function($el) {\r\n//        return {\r\n//            set: function(value) {\r\n//                if (value === undefined) {\r\n//                    value = null;\r\n//                }\r\n//                var funcs = elBinder.functions[$el.data(elBinder.DATATYPE_KEY)] || elBinder.functions['_default'];\r\n//                var func = funcs['set'] || elBinder.functions['_default']['set'];\r\n//                return func($el, value);\r\n//            },\r\n//            get: function() {\r\n//                var funcs = elBinder.functions[$el.data(elBinder.DATATYPE_KEY)] || elBinder.functions['_default'];\r\n//                var func = funcs['get'] || elBinder.functions['_default']['get'];\r\n//                return func($el);\r\n//            },\r\n//            register: function(dataType) {\r\n//                $el.data(elBinder.DATATYPE_KEY, dataType);\r\n//            }\r\n//        }\r\n//    };\r\n    \r\n//    elBinder.DATATYPE_KEY = \"datepicker.ko.dataType\";\r\n\r\n//    elBinder.functions = {\r\n//        '_default': {\r\n//            get: function ($el) {\r\n//                return $el.datepicker('get');\r\n//            },\r\n//            set: function ($el, value) {\r\n//                $el.datepicker('set', value);\r\n//            }\r\n//        },\r\n//        'iso': {\r\n//            get: function ($el) {\r\n//                var value = $el.datepicker('get');\r\n//                return (value && value.format('YYYY-MM-DD'));\r\n//            },\r\n//            set: function ($el, value) {\r\n//                var mnt = moment(value);\r\n//                $el.datepicker('set', mnt);\r\n//            }\r\n//        },\r\n//        'format': {\r\n//            get: function ($el) {\r\n//                return $el.datepicker('getAsText');\r\n//            }\r\n//        },\r\n//        'date': {\r\n//            get: function ($el) {\r\n//                var value = $el.datepicker('get');\r\n//                return (value && value.toDate());\r\n//            }\r\n//        }\r\n//    };\r\n\r\n//    //#endregion\r\n\r\n//    ko.bindingHandlers.datepicker = {\r\n//        init: function (element, valueAccessor, allBindingsAccessor) {\r\n//            var options = allBindingsAccessor().datepickerOptions || {};\r\n//            var dataType = options.dataType || detectDataType(ko.utils.unwrapObservable(valueAccessor()));\r\n//            dataType = !dataType || dataType == 'string' ? 'iso' : dataType;\r\n//            var $el = $(element).(options);\r\n\r\n//            elBinder($el).register(dataType);\r\n\r\n//            ko.utils.registerEventHandler(element, \"changeDate\", function (event) {\r\n//                var accessor = valueAccessor();\r\n//                if (ko.isObservable(accessor)) {\r\n//                    var value = elBinder($el).get();\r\n//                    accessor(value);\r\n//                }\r\n//            });\r\n//        },\r\n//        update: function (element, valueAccessor) {\r\n//            elBinder($(element))\r\n//                .set(ko.utils.unwrapObservable(valueAccessor()));\r\n//        }\r\n//    };\r\n//})(jQuery, this.ko, this.moment);"],"sourceRoot":"/source/"}