{"version":3,"sources":["/source/wwwroot/js/Pager.ts"],"names":["Pager","source","options","_this","this","IdPrefix","ko","observable","HasDetailView","ShowEditDeleteControls","EditingHelper","UseResponsiveTable","UseStripedTable","UseSmallColumnControls","UseSmallControls","ActivePage","ShowPageSizeSelector","ShowColumnSelector","PageSize","PageSizes","observableArray","PageCount","computed","deferEvaluation","read","count","Math","ceil","FilteredSource","length","Pages","out","i","push","index","selected","HasPrevPage","HasNextPage","Source","slice","SortedSource","undefined","CurrentlySortedBy","sort","CurrentSortMode","SortModes","Ascending","Sorter","e1","e2","DisplaySource","start","DisplayColumns","Columns","filter","c","Visible","DisplaySpecialActions","SpecialActions","DisplaySpecialColumnActions","data","SpecialColumnActions","apply","ShowSorters","SortBy","column","IsSortable","Descending","None","SelectPage","page","SelectNextPage","SelectPrevPage","_i","_a","col","_b","_c","action","_d","_e","PagerSpecialColumnAction","Name","Action","enabled","visible","Enabled","isObservable","console","log","PagerSpecialAction","PagerColumn","Value","CssClasses","Styles","ValueSorter","unwrap","DisplayValue","v","value","Renderer","DisplayName","DefaultRenderer","SortMode","Array","style","key","Width","ArrayRenderer","seperator","elementRenderer","StringSorter","NumberSorter","DateSorter","Date","ArraySorter","DateRenderer","toString","moment","format","DateTimeRenderer","TimeRenderer"],"mappings":"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","file":"wwwroot/js/Pager.min.js","sourcesContent":["class Pager<T extends ClientModel.Entity> {\r\n    constructor(source: KnockoutObservable<T[]>, options: IPagerOptions<T>) {\r\n        var _self = this;\r\n        this.Source = source;\r\n        this.Columns(options.Columns);\r\n        for (let col of this.Columns()) {\r\n            if (col.CurrentSortMode() !== SortModes.None && this.CurrentlySortedBy() !== col) {\r\n                if (this.CurrentlySortedBy() !== undefined)\r\n                    this.CurrentlySortedBy().CurrentSortMode(SortModes.None);\r\n                this.CurrentlySortedBy(col);\r\n            }\r\n        }\r\n        if (options.SpecialColumnActions !== undefined)\r\n            for (let action of options.SpecialColumnActions) {\r\n                this.SpecialColumnActions.push(action);\r\n            }\r\n        if (options.SpecialActions !== undefined)\r\n            for (let action of options.SpecialActions) {\r\n                this.SpecialActions.push(action);\r\n            }\r\n        this.IdPrefix(options.IdPrefix);\r\n        if (options.PageSize !== undefined)\r\n            this.PageSize(options.PageSize);\r\n        if (options.PageSizes !== undefined)\r\n            this.PageSizes(options.PageSizes);\r\n        this.UseResponsiveTable(options.UseResponsiveTable || false);\r\n        this.UseStripedTable(options.UseStripedTable || false);\r\n        this.UseSmallColumnControls(options.UseSmallColumnControls || false);\r\n        this.UseSmallControls(options.UseSmallControls || false);\r\n        if (options.EditingHelper !== undefined) {\r\n            this.HasDetailView(options.EditingHelper.HasDetailView);\r\n            this.ShowEditDeleteControls(options.ShowEditDeleteControls || false);\r\n            this.EditingHelper(options.EditingHelper);\r\n        }\r\n        if (options.ShowColumnSelector !== undefined)\r\n            this.ShowColumnSelector(options.ShowColumnSelector);\r\n        if (options.ShowPageSizeSelector !== undefined)\r\n            this.ShowPageSizeSelector(options.ShowPageSizeSelector);\r\n    }\r\n\r\n    IdPrefix = ko.observable<string>();\r\n    HasDetailView = ko.observable(false);\r\n    ShowEditDeleteControls = ko.observable(false);\r\n    EditingHelper = ko.observable<EditingHelper<T>>();\r\n    UseResponsiveTable = ko.observable(false);\r\n    UseStripedTable = ko.observable(false);\r\n    UseSmallColumnControls = ko.observable(false);\r\n    UseSmallControls = ko.observable(false);\r\n    Source: KnockoutObservable<T[]>;\r\n    ActivePage = ko.observable(0);\r\n    ShowPageSizeSelector = ko.observable(true);\r\n    ShowColumnSelector = ko.observable(true);\r\n    PageSize = ko.observable(10);\r\n    PageSizes = ko.observableArray([5, 10, 15, 20, 30, 40, 50, 100]);\r\n    PageCount = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => {\r\n            let count = Math.ceil(this.FilteredSource().length / this.PageSize());\r\n            if (this.ActivePage() * this.PageSize() >= count)\r\n                this.ActivePage(count - 1);\r\n            return count;\r\n        },\r\n\r\n    });\r\n    Pages = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => {\r\n            const out = [];\r\n            for (let i = 0; i < this.PageCount(); i++) {\r\n                out.push({ index: i + 1, selected: i === this.ActivePage() });\r\n            }\r\n            return out;\r\n        }\r\n    });\r\n    HasPrevPage = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => this.ActivePage() !== 0\r\n    });\r\n    HasNextPage = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => this.ActivePage() !== this.PageCount() - 1\r\n    });\r\n    FilteredSource = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => this.Source().slice()\r\n    });\r\n    SortedSource = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => {\r\n            if (this.CurrentlySortedBy() !== undefined)\r\n                return this.FilteredSource().sort(this.CurrentlySortedBy().CurrentSortMode() === SortModes.Ascending ?\r\n                    this.CurrentlySortedBy().Sorter :\r\n                    (e1: T, e2: T) => this.CurrentlySortedBy().Sorter(e2, e1));\r\n            else\r\n                return this.FilteredSource();\r\n        }\r\n    });\r\n    DisplaySource = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => {\r\n            let start = this.PageSize() * this.ActivePage();\r\n            return this.SortedSource().slice(start, start + this.PageSize());\r\n        }\r\n    });\r\n    DisplayColumns = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => {\r\n            return this.Columns().slice().filter((c) => c.Visible())\r\n        },\r\n\r\n    });\r\n    DisplaySpecialActions = ko.computed({\r\n        deferEvaluation: true,\r\n        read: () => {\r\n            return this.SpecialActions().slice().filter((c) => c.Visible());\r\n        }\r\n\r\n    });\r\n    DisplaySpecialColumnActions = (data)=> {\r\n        return this.SpecialColumnActions().slice().filter((c) => c.Visible.apply(data))\r\n    };\r\n    Columns = ko.observableArray<IPagerColumn<T>>();\r\n    SpecialColumnActions = ko.observableArray<PagerSpecialColumnAction<T>>();\r\n    CurrentlySortedBy = ko.observable<IPagerColumn<T>>();\r\n    ShowSorters = ko.observable(true);\r\n    SpecialActions = ko.observableArray<PagerSpecialAction>();\r\n\r\n    SortBy = (column: IPagerColumn<T>) => {\r\n        if (column.IsSortable())\r\n            if (column.CurrentSortMode() === SortModes.Ascending)\r\n                column.CurrentSortMode(SortModes.Descending);\r\n            else if (column.CurrentSortMode() === SortModes.Descending)\r\n                column.CurrentSortMode(SortModes.Ascending);\r\n            else {\r\n                column.CurrentSortMode(SortModes.Ascending);\r\n                if (this.CurrentlySortedBy() !== undefined)\r\n                    this.CurrentlySortedBy().CurrentSortMode(SortModes.None);\r\n                this.CurrentlySortedBy(column);\r\n            }\r\n    }\r\n\r\n    SelectPage = (page) => {\r\n        this.ActivePage(page.index - 1);\r\n    }\r\n    SelectNextPage = () => {\r\n        if (this.HasNextPage())\r\n            this.ActivePage(this.ActivePage() + 1);\r\n    }\r\n    SelectPrevPage = () => {\r\n        if (this.HasPrevPage())\r\n            this.ActivePage(this.ActivePage() - 1);\r\n    }\r\n}\r\n\r\ninterface IPagerOptions<T extends ClientModel.Entity> {\r\n\r\n    //Filters:(T)=>boolean|Array<(T)=>boolean>;\r\n    Columns: Array<IPagerColumn<T>>;\r\n    PageSize?: number;\r\n    ShowPageSizeSelector?: boolean;\r\n    ShowColumnSelector?: boolean;\r\n    PageSizes?: number[];\r\n    UseResponsiveTable?: boolean;\r\n    UseStripedTable?: boolean;\r\n    EditingHelper?: EditingHelper<T>;\r\n    ShowEditDeleteControls?: boolean;\r\n    IdPrefix: string;\r\n    SpecialColumnActions?: PagerSpecialColumnAction<T>[];\r\n    SpecialActions?: PagerSpecialAction[];\r\n    UseSmallColumnControls?:boolean;\r\n    UseSmallControls?:boolean;\r\n}\r\n\r\n\r\nclass PagerSpecialColumnAction<T> {\r\n    constructor(public Name: string, public Action: (e: T) => void, enabled?: ((v: T) => boolean) | KnockoutObservable<boolean>, visible?: KnockoutObservable<boolean> | ((v: T) => boolean)) {\r\n        if (enabled !== undefined)\r\n            if (ko.isObservable(enabled))\r\n                this.Enabled = enabled;\r\n            else\r\n                this.Enabled = ko.computed(function () { return enabled(this); });\r\n        if (visible !== undefined)\r\n            if (ko.isObservable(visible))\r\n                this.Visible = visible;\r\n            else\r\n                this.Visible = ko.computed(function () {\r\n                    console.log(this);\r\n                    return visible(this);\r\n                });\r\n    }\r\n\r\n    Enabled: KnockoutObservable<boolean> = ko.computed(() => true);\r\n    Visible: KnockoutObservable<boolean> = ko.computed(() => true);\r\n}\r\n\r\n\r\nclass PagerSpecialAction {\r\n    constructor(public Name: string, public Action: () => void, enabled?: (() => boolean) | KnockoutObservable<boolean>, visible?: KnockoutObservable<boolean> | (() => boolean)) {\r\n        if (enabled !== undefined)\r\n            if (ko.isObservable(enabled))\r\n                this.Enabled = enabled;\r\n            else\r\n                this.Enabled = ko.computed(function () { return enabled(); });\r\n        if (visible !== undefined)\r\n            if (ko.isObservable(visible))\r\n                this.Visible = visible;\r\n            else\r\n                this.Visible = ko.computed(function () { return visible(); });\r\n    }\r\n\r\n    Enabled: KnockoutObservable<boolean> = ko.computed(() => true);\r\n    Visible: KnockoutObservable<boolean> = ko.computed(() => true);\r\n}\r\n\r\ninterface IPagerFilter<T> {\r\n\r\n}\r\n\r\nenum SortModes {\r\n    None,\r\n    Ascending,\r\n    Descending\r\n}\r\n\r\n\r\n\r\ninterface IPagerColumn<T> {\r\n    DisplayValue: (v: T) => KnockoutComputed<string>;\r\n    IsSortable: () => boolean;\r\n    CurrentSortMode: KnockoutObservable<SortModes>;\r\n    Sorter: (e1: T, e2: T) => number;\r\n    DisplayName: KnockoutComputed<string>;\r\n    Name: string | KnockoutObservable<string>;\r\n    Visible: KnockoutObservable<boolean>;\r\n    CssClasses: string;\r\n    Styles: string;\r\n}\r\n\r\ninterface IPagerColumnOptions<T> {\r\n    CssClasses?: string | string[];\r\n    Styles?: string | { key: string, value: string }[]\r\n    Width?: number;\r\n    Sorter?: (e1: T, e2: T) => number;\r\n    Renderer?: (v: T) => string;\r\n    Visible?: boolean;\r\n    SortMode?: SortModes;\r\n}\r\n\r\nclass PagerColumn<T, VT> implements IPagerColumn<T> {\r\n    Renderer: (v: VT) => string;\r\n    ValueSorter: (e1: VT, e2: VT) => number;\r\n    CssClasses = \"\";\r\n    Styles = \"\";\r\n    Visible = ko.observable(true);\r\n\r\n    constructor(public Name: string | KnockoutObservable<string>, public Value: (v: T) => VT | KnockoutObservable<VT>, options: IPagerColumnOptions<VT> = {}) {\r\n        if (options.Visible !== undefined)\r\n            this.Visible(options.Visible);\r\n        this.Renderer = options.Renderer || PagerColumn.DefaultRenderer();\r\n        this.ValueSorter = options.Sorter;\r\n        if (options.SortMode !== undefined)\r\n            this.CurrentSortMode(options.SortMode)\r\n\r\n        if (options.CssClasses !== undefined)\r\n            if (options.CssClasses instanceof Array && options.CssClasses.length > 0) {\r\n                this.CssClasses = options.CssClasses[0];\r\n                for (let i = 1; i < options.CssClasses.length; i++) {\r\n                    this.CssClasses + \" \" + options.CssClasses[i];\r\n                }\r\n            } else if (typeof options.CssClasses === \"string\")\r\n                this.CssClasses = <string>options.CssClasses;\r\n        if (options.Styles !== undefined)\r\n            if (options.Styles instanceof Array && options.Styles.length > 0) {\r\n                this.Styles = \"\";\r\n                for (let style of <{ key: string, value: string }[]>options.Styles) {\r\n                    this.Styles += style.key + \": \" + style.value + \";\";\r\n                }\r\n\r\n            } else if (typeof options.Styles === \"string\")\r\n                this.Styles = <string>options.Styles;\r\n        if (options.Width !== undefined)\r\n            this.Styles = \"width: \" + options.Width + \"px;\" + (this.Styles || \"\");\r\n    }\r\n\r\n    IsSortable = () => this.ValueSorter !== undefined;\r\n    CurrentSortMode = ko.observable(SortModes.None);\r\n    Sorter = (e1: T, e2: T) => this.ValueSorter(ko.unwrap(this.Value(e1)), ko.unwrap(this.Value(e2)));\r\n    DisplayValue = (v: T) => {\r\n        return ko.computed<string>({\r\n            deferEvaluation: true,\r\n            read: () => {\r\n                const value = ko.unwrap(this.Value(v));\r\n                if (value === undefined)\r\n                    return \"\";\r\n                return this.Renderer(value);\r\n            }\r\n        }\r\n        )\r\n    };\r\n\r\n    DisplayName = ko.computed<string>({\r\n        deferEvaluation: true,\r\n        read: () => this.CurrentSortMode() === SortModes.None ? ko.unwrap(this.Name) : ko.unwrap(this.Name) +\r\n            (this.CurrentSortMode() === SortModes.Ascending ? \" &#9650;\" : \" &#9660;\"),\r\n\r\n    })\r\n\r\n    static StringSorter = () => (e1: string, e2: string) => e1 > e2 ? 1 : -1;\r\n    static NumberSorter = () => (e1: number, e2: number) => e1 > e2 ? 1 : -1;\r\n    static DateSorter = () => (e1: Date | number | string, e2: Date | number | string) => new Date(e1) - new Date(e2);\r\n    static ArraySorter = () => (e1: any[], e2: any[]) => e1.length - e2.length;\r\n\r\n    static DefaultRenderer = () => (v) => {\r\n        if (v === undefined)\r\n            return \"\";\r\n        else if (v instanceof Date)\r\n            return PagerColumn.DateRenderer()(v);\r\n        else if (v instanceof Array) {\r\n            return PagerColumn.ArrayRenderer()(v);\r\n        }\r\n        return v.toString();\r\n    };\r\n    static DateRenderer = () => (v: Date | number | string) => <string>moment(v).format(\"LL\");\r\n    static DateTimeRenderer = () => (v: Date | number | string) => <string>moment(v).format(\"LLL\");\r\n    static TimeRenderer = () => (v: Date | number | string) => <string>moment(v).format(\"LT\");\r\n    static ArrayRenderer<TS>(seperator = \", \", elementRenderer: (v: TS) => string = PagerColumn.DefaultRenderer()) {\r\n        return (v: TS[]) => {\r\n            let out = \"\";\r\n            if (v !== undefined && v.length > 0) {\r\n                out += elementRenderer(v[0]);\r\n                for (let i = 1; i < v.length; i++)\r\n                    out += seperator + elementRenderer(v[i]);\r\n            }\r\n            return out;\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}