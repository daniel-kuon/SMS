function CreateObservable(val, options) {
    var ob;
    if (val instanceof ClientModel.Entity)
        ob = ko.observable(val);
    else {
        ob = ko.observable();
        if (options === undefined)
            options = val;
    }
    if (options !== undefined) {
        ob.ForeignKeyFor = options.ForeignKeyFor;
        ob.AddTransferMode = options.AddTransferMode;
        ob.UpdateTransferMode = options.UpdateTransferMode;
    }
    return ob;
}
function CreateObservableArray(val, options) {
    var ob;
    if (val instanceof Array)
        ob = ko.observableArray(val);
    else {
        ob = ko.observableArray();
        if (options === undefined)
            options = val;
    }
    if (options !== undefined) {
        ob.ForeignKeyFor = options.ForeignKeyFor;
        ob.AddTransferMode = options.AddTransferMode;
        ob.UpdateTransferMode = options.UpdateTransferMode;
    }
    return ob;
}
var TransferMode;
(function (TransferMode) {
    TransferMode[TransferMode["Exclude"] = 0] = "Exclude";
    TransferMode[TransferMode["IdOnly"] = 1] = "IdOnly";
    TransferMode[TransferMode["Include"] = 2] = "Include";
})(TransferMode || (TransferMode = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIktub2Nrb3V0SGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLDBCQUF5RCxHQUFvQixFQUFFLE9BQW9CO0lBQy9GLElBQUksRUFBeUIsQ0FBQztJQUM5QixFQUFFLENBQUMsQ0FBQyxHQUFHLFlBQVksV0FBVyxDQUFDLE1BQU0sQ0FBQztRQUNsQyxFQUFFLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBUyxHQUFHLENBQUMsQ0FBQztJQUNwQyxJQUFJLENBQUMsQ0FBQztRQUNGLEVBQUUsR0FBRyxFQUFFLENBQUMsVUFBVSxFQUFLLENBQUM7UUFDeEIsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLFNBQVMsQ0FBQztZQUN0QixPQUFPLEdBQUcsR0FBRyxDQUFDO0lBQ3RCLENBQUM7SUFDRCxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztRQUN4QixFQUFFLENBQUMsYUFBYSxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUM7UUFDekMsRUFBRSxDQUFDLGVBQWUsR0FBRyxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdDLEVBQUUsQ0FBQyxrQkFBa0IsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUM7SUFDdkQsQ0FBQztJQUNELE1BQU0sQ0FBQyxFQUFFLENBQUM7QUFDZCxDQUFDO0FBS0QsK0JBQThELEdBQW9CLEVBQUUsT0FBb0I7SUFDcEcsSUFBSSxFQUE4QixDQUFDO0lBQ25DLEVBQUUsQ0FBQyxDQUFDLEdBQUcsWUFBWSxLQUFLLENBQUM7UUFDckIsRUFBRSxHQUFHLEVBQUUsQ0FBQyxlQUFlLENBQVMsR0FBRyxDQUFDLENBQUM7SUFDekMsSUFBSSxDQUFDLENBQUM7UUFDRixFQUFFLEdBQUcsRUFBRSxDQUFDLGVBQWUsRUFBSyxDQUFDO1FBQzdCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUM7WUFDdEIsT0FBTyxHQUFHLEdBQUcsQ0FBQztJQUN0QixDQUFDO0lBQ0QsRUFBRSxDQUFDLENBQUMsT0FBTyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDeEIsRUFBRSxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDO1FBQ3pDLEVBQUUsQ0FBQyxlQUFlLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQztRQUM3QyxFQUFFLENBQUMsa0JBQWtCLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDO0lBQ3ZELENBQUM7SUFDRCxNQUFNLENBQUMsRUFBRSxDQUFDO0FBQ2QsQ0FBQztBQU1ELElBQUssWUFJSjtBQUpELFdBQUssWUFBWTtJQUNiLHFEQUFPLENBQUE7SUFDUCxtREFBTSxDQUFBO0lBQ04scURBQU8sQ0FBQTtBQUNYLENBQUMsRUFKSSxZQUFZLEtBQVosWUFBWSxRQUloQiIsImZpbGUiOiJLbm9ja291dEhlbHBlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIENyZWF0ZU9ic2VydmFibGU8VCBleHRlbmRzIENsaWVudE1vZGVsLklFbnRpdHk+KG9wdGlvbnM6IElLb09wdGlvbnMpOiBLbm9ja291dE9ic2VydmFibGU8VD47XHJcbmZ1bmN0aW9uIENyZWF0ZU9ic2VydmFibGU8VCBleHRlbmRzIENsaWVudE1vZGVsLklFbnRpdHk+KHZhbD86IFQsIG9wdGlvbnM/OiBJS29PcHRpb25zKTogS25vY2tvdXRPYnNlcnZhYmxlPFQ+O1xyXG5mdW5jdGlvbiBDcmVhdGVPYnNlcnZhYmxlPFQgZXh0ZW5kcyBDbGllbnRNb2RlbC5JRW50aXR5Pih2YWw/OiBUIHwgSUtvT3B0aW9ucywgb3B0aW9ucz86IElLb09wdGlvbnMpOiBLbm9ja291dE9ic2VydmFibGU8VD4ge1xyXG4gICAgdmFyIG9iOiBLbm9ja291dE9ic2VydmFibGU8VD47XHJcbiAgICBpZiAodmFsIGluc3RhbmNlb2YgQ2xpZW50TW9kZWwuRW50aXR5KVxyXG4gICAgICAgIG9iID0ga28ub2JzZXJ2YWJsZTxUPig8YW55PnZhbCk7XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBvYiA9IGtvLm9ic2VydmFibGU8VD4oKTtcclxuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICBvcHRpb25zID0gdmFsO1xyXG4gICAgfVxyXG4gICAgaWYgKG9wdGlvbnMgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIG9iLkZvcmVpZ25LZXlGb3IgPSBvcHRpb25zLkZvcmVpZ25LZXlGb3I7XHJcbiAgICAgICAgb2IuQWRkVHJhbnNmZXJNb2RlID0gb3B0aW9ucy5BZGRUcmFuc2Zlck1vZGU7XHJcbiAgICAgICAgb2IuVXBkYXRlVHJhbnNmZXJNb2RlID0gb3B0aW9ucy5VcGRhdGVUcmFuc2Zlck1vZGU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gb2I7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBDcmVhdGVPYnNlcnZhYmxlQXJyYXk8VCBleHRlbmRzIENsaWVudE1vZGVsLklFbnRpdHk+KG9wdGlvbnM6IElLb09wdGlvbnMpOiBLbm9ja291dE9ic2VydmFibGVBcnJheTxUPjtcclxuZnVuY3Rpb24gQ3JlYXRlT2JzZXJ2YWJsZUFycmF5PFQgZXh0ZW5kcyBDbGllbnRNb2RlbC5JRW50aXR5Pih2YWw/OiBUW10sIG9wdGlvbnM/OiBJS29PcHRpb25zKTogS25vY2tvdXRPYnNlcnZhYmxlQXJyYXk8VD47XHJcbmZ1bmN0aW9uIENyZWF0ZU9ic2VydmFibGVBcnJheTxUIGV4dGVuZHMgQ2xpZW50TW9kZWwuSUVudGl0eT4odmFsPzogVFtdfElLb09wdGlvbnMsIG9wdGlvbnM/OiBJS29PcHRpb25zKTogS25vY2tvdXRPYnNlcnZhYmxlQXJyYXk8VD4ge1xyXG4gICAgdmFyIG9iOiBLbm9ja291dE9ic2VydmFibGVBcnJheTxUPjtcclxuICAgIGlmICh2YWwgaW5zdGFuY2VvZiBBcnJheSlcclxuICAgICAgICBvYiA9IGtvLm9ic2VydmFibGVBcnJheTxUPig8VFtdPnZhbCk7XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBvYiA9IGtvLm9ic2VydmFibGVBcnJheTxUPigpO1xyXG4gICAgICAgIGlmIChvcHRpb25zID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgIG9wdGlvbnMgPSB2YWw7XHJcbiAgICB9XHJcbiAgICBpZiAob3B0aW9ucyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgb2IuRm9yZWlnbktleUZvciA9IG9wdGlvbnMuRm9yZWlnbktleUZvcjtcclxuICAgICAgICBvYi5BZGRUcmFuc2Zlck1vZGUgPSBvcHRpb25zLkFkZFRyYW5zZmVyTW9kZTtcclxuICAgICAgICBvYi5VcGRhdGVUcmFuc2Zlck1vZGUgPSBvcHRpb25zLlVwZGF0ZVRyYW5zZmVyTW9kZTtcclxuICAgIH1cclxuICAgIHJldHVybiBvYjtcclxufVxyXG5cclxuaW50ZXJmYWNlIEtub2Nrb3V0T2JzZXJ2YWJsZTxUPiBleHRlbmRzIElLb09wdGlvbnMge1xyXG5cclxufVxyXG5cclxuZW51bSBUcmFuc2Zlck1vZGUge1xyXG4gICAgRXhjbHVkZSxcclxuICAgIElkT25seSxcclxuICAgIEluY2x1ZGVcclxufVxyXG5cclxuaW50ZXJmYWNlIElLb09wdGlvbnMge1xyXG4gICAgRm9yZWlnbktleUZvcj86IEtub2Nrb3V0T2JzZXJ2YWJsZTxDbGllbnRNb2RlbC5JRW50aXR5PjtcclxuICAgIEFkZFRyYW5zZmVyTW9kZT86IFRyYW5zZmVyTW9kZTtcclxuICAgIFVwZGF0ZVRyYW5zZmVyTW9kZT86IFRyYW5zZmVyTW9kZTtcclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
