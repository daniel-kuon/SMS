var Pager = (function () {
    function Pager(source, options) {
        var _this = this;
        this.IdPrefix = ko.observable();
        this.HasDetailView = ko.observable(false);
        this.ShowEditDeleteControls = ko.observable(false);
        this.EditingHelper = ko.observable();
        this.UseResponsiveTable = ko.observable(false);
        this.UseStripedTable = ko.observable(false);
        this.UseSmallColumnControls = ko.observable(false);
        this.UseSmallControls = ko.observable(false);
        this.ActivePage = ko.observable(0);
        this.ShowPageSizeSelector = ko.observable(true);
        this.ShowColumnSelector = ko.observable(true);
        this.PageSize = ko.observable(10);
        this.PageSizes = ko.observableArray([5, 10, 15, 20, 30, 40, 50, 100]);
        this.PageCount = ko.computed({
            deferEvaluation: true,
            read: function () {
                var count = Math.ceil(_this.FilteredSource().length / _this.PageSize());
                if (_this.ActivePage() * _this.PageSize() >= count)
                    _this.ActivePage(count - 1);
                return count;
            }
        });
        this.Pages = ko.computed({
            deferEvaluation: true,
            read: function () {
                var out = [];
                for (var i = 0; i < _this.PageCount(); i++) {
                    out.push({ index: i + 1, selected: i === _this.ActivePage() });
                }
                return out;
            }
        });
        this.HasPrevPage = ko.computed({
            deferEvaluation: true,
            read: function () { return _this.ActivePage() !== 0; }
        });
        this.HasNextPage = ko.computed({
            deferEvaluation: true,
            read: function () { return _this.ActivePage() !== _this.PageCount() - 1; }
        });
        this.FilteredSource = ko.computed({
            deferEvaluation: true,
            read: function () { return _this.Source().slice(); }
        });
        this.SortedSource = ko.computed({
            deferEvaluation: true,
            read: function () {
                if (_this.CurrentlySortedBy() !== undefined)
                    return _this.FilteredSource().sort(_this.CurrentlySortedBy().CurrentSortMode() === SortModes.Ascending ?
                        _this.CurrentlySortedBy().Sorter :
                        function (e1, e2) { return _this.CurrentlySortedBy().Sorter(e2, e1); });
                else
                    return _this.FilteredSource();
            }
        });
        this.DisplaySource = ko.computed({
            deferEvaluation: true,
            read: function () {
                var start = _this.PageSize() * _this.ActivePage();
                return _this.SortedSource().slice(start, start + _this.PageSize());
            }
        });
        this.DisplayColumns = ko.computed({
            deferEvaluation: true,
            read: function () {
                return _this.Columns().slice().filter(function (c) { return c.Visible(); });
            }
        });
        this.DisplaySpecialActions = ko.computed({
            deferEvaluation: true,
            read: function () {
                return _this.SpecialActions().slice().filter(function (c) { return c.Visible(); });
            }
        });
        this.DisplaySpecialColumnActions = function (data) {
            return _this.SpecialColumnActions().slice().filter(function (c) { return c.Visible.apply(data); });
        };
        this.Columns = ko.observableArray();
        this.SpecialColumnActions = ko.observableArray();
        this.CurrentlySortedBy = ko.observable();
        this.ShowSorters = ko.observable(true);
        this.SpecialActions = ko.observableArray();
        this.SortBy = function (column) {
            if (column.IsSortable())
                if (column.CurrentSortMode() === SortModes.Ascending)
                    column.CurrentSortMode(SortModes.Descending);
                else if (column.CurrentSortMode() === SortModes.Descending)
                    column.CurrentSortMode(SortModes.Ascending);
                else {
                    column.CurrentSortMode(SortModes.Ascending);
                    if (_this.CurrentlySortedBy() !== undefined)
                        _this.CurrentlySortedBy().CurrentSortMode(SortModes.None);
                    _this.CurrentlySortedBy(column);
                }
        };
        this.SelectPage = function (page) {
            _this.ActivePage(page.index - 1);
        };
        this.SelectNextPage = function () {
            if (_this.HasNextPage())
                _this.ActivePage(_this.ActivePage() + 1);
        };
        this.SelectPrevPage = function () {
            if (_this.HasPrevPage())
                _this.ActivePage(_this.ActivePage() - 1);
        };
        var _self = this;
        this.Source = source;
        this.Columns(options.Columns);
        for (var _i = 0, _a = this.Columns(); _i < _a.length; _i++) {
            var col = _a[_i];
            if (col.CurrentSortMode() !== SortModes.None && this.CurrentlySortedBy() !== col) {
                if (this.CurrentlySortedBy() !== undefined)
                    this.CurrentlySortedBy().CurrentSortMode(SortModes.None);
                this.CurrentlySortedBy(col);
            }
        }
        if (options.SpecialColumnActions !== undefined)
            for (var _b = 0, _c = options.SpecialColumnActions; _b < _c.length; _b++) {
                var action = _c[_b];
                this.SpecialColumnActions.push(action);
            }
        if (options.SpecialActions !== undefined)
            for (var _d = 0, _e = options.SpecialActions; _d < _e.length; _d++) {
                var action = _e[_d];
                this.SpecialActions.push(action);
            }
        this.IdPrefix(options.IdPrefix);
        if (options.PageSize !== undefined)
            this.PageSize(options.PageSize);
        if (options.PageSizes !== undefined)
            this.PageSizes(options.PageSizes);
        this.UseResponsiveTable(options.UseResponsiveTable || false);
        this.UseStripedTable(options.UseStripedTable || false);
        this.UseSmallColumnControls(options.UseSmallColumnControls || false);
        this.UseSmallControls(options.UseSmallControls || false);
        if (options.EditingHelper !== undefined) {
            this.HasDetailView(options.EditingHelper.HasDetailView);
            this.ShowEditDeleteControls(options.ShowEditDeleteControls || false);
            this.EditingHelper(options.EditingHelper);
        }
        if (options.ShowColumnSelector !== undefined)
            this.ShowColumnSelector(options.ShowColumnSelector);
        if (options.ShowPageSizeSelector !== undefined)
            this.ShowPageSizeSelector(options.ShowPageSizeSelector);
    }
    return Pager;
}());
var PagerSpecialColumnAction = (function () {
    function PagerSpecialColumnAction(Name, Action, enabled, visible) {
        this.Name = Name;
        this.Action = Action;
        this.Enabled = ko.computed(function () { return true; });
        this.Visible = ko.computed(function () { return true; });
        if (enabled !== undefined)
            if (ko.isObservable(enabled))
                this.Enabled = enabled;
            else
                this.Enabled = ko.computed(function () { return enabled(this); });
        if (visible !== undefined)
            if (ko.isObservable(visible))
                this.Visible = visible;
            else
                this.Visible = ko.computed(function () {
                    console.log(this);
                    return visible(this);
                });
    }
    return PagerSpecialColumnAction;
}());
var PagerSpecialAction = (function () {
    function PagerSpecialAction(Name, Action, enabled, visible) {
        this.Name = Name;
        this.Action = Action;
        this.Enabled = ko.computed(function () { return true; });
        this.Visible = ko.computed(function () { return true; });
        if (enabled !== undefined)
            if (ko.isObservable(enabled))
                this.Enabled = enabled;
            else
                this.Enabled = ko.computed(function () { return enabled(); });
        if (visible !== undefined)
            if (ko.isObservable(visible))
                this.Visible = visible;
            else
                this.Visible = ko.computed(function () { return visible(); });
    }
    return PagerSpecialAction;
}());
var SortModes;
(function (SortModes) {
    SortModes[SortModes["None"] = 0] = "None";
    SortModes[SortModes["Ascending"] = 1] = "Ascending";
    SortModes[SortModes["Descending"] = 2] = "Descending";
})(SortModes || (SortModes = {}));
var PagerColumn = (function () {
    function PagerColumn(Name, Value, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        this.Name = Name;
        this.Value = Value;
        this.CssClasses = "";
        this.Styles = "";
        this.Visible = ko.observable(true);
        this.IsSortable = function () { return _this.ValueSorter !== undefined; };
        this.CurrentSortMode = ko.observable(SortModes.None);
        this.Sorter = function (e1, e2) { return _this.ValueSorter(ko.unwrap(_this.Value(e1)), ko.unwrap(_this.Value(e2))); };
        this.DisplayValue = function (v) {
            return ko.computed({
                deferEvaluation: true,
                read: function () {
                    var value = ko.unwrap(_this.Value(v));
                    if (value === undefined)
                        return "";
                    return _this.Renderer(value);
                }
            });
        };
        this.DisplayName = ko.computed({
            deferEvaluation: true,
            read: function () { return _this.CurrentSortMode() === SortModes.None ? ko.unwrap(_this.Name) : ko.unwrap(_this.Name) +
                (_this.CurrentSortMode() === SortModes.Ascending ? " &#9650;" : " &#9660;"); }
        });
        if (options.Visible !== undefined)
            this.Visible(options.Visible);
        this.Renderer = options.Renderer || PagerColumn.DefaultRenderer();
        this.ValueSorter = options.Sorter;
        if (options.SortMode !== undefined)
            this.CurrentSortMode(options.SortMode);
        if (options.CssClasses !== undefined)
            if (options.CssClasses instanceof Array && options.CssClasses.length > 0) {
                this.CssClasses = options.CssClasses[0];
                for (var i = 1; i < options.CssClasses.length; i++) {
                    this.CssClasses + " " + options.CssClasses[i];
                }
            }
            else if (typeof options.CssClasses === "string")
                this.CssClasses = options.CssClasses;
        if (options.Styles !== undefined)
            if (options.Styles instanceof Array && options.Styles.length > 0) {
                this.Styles = "";
                for (var _i = 0, _a = options.Styles; _i < _a.length; _i++) {
                    var style = _a[_i];
                    this.Styles += style.key + ": " + style.value + ";";
                }
            }
            else if (typeof options.Styles === "string")
                this.Styles = options.Styles;
        if (options.Width !== undefined)
            this.Styles = "width: " + options.Width + "px;" + (this.Styles || "");
    }
    PagerColumn.ArrayRenderer = function (seperator, elementRenderer) {
        if (seperator === void 0) { seperator = ", "; }
        if (elementRenderer === void 0) { elementRenderer = PagerColumn.DefaultRenderer(); }
        return function (v) {
            var out = "";
            if (v !== undefined && v.length > 0) {
                out += elementRenderer(v[0]);
                for (var i = 1; i < v.length; i++)
                    out += seperator + elementRenderer(v[i]);
            }
            return out;
        };
    };
    PagerColumn.StringSorter = function () { return function (e1, e2) { return e1 > e2 ? 1 : -1; }; };
    PagerColumn.NumberSorter = function () { return function (e1, e2) { return e1 > e2 ? 1 : -1; }; };
    PagerColumn.DateSorter = function () { return function (e1, e2) { return new Date(e1) - new Date(e2); }; };
    PagerColumn.ArraySorter = function () { return function (e1, e2) { return e1.length - e2.length; }; };
    PagerColumn.DefaultRenderer = function () { return function (v) {
        if (v === undefined)
            return "";
        else if (v instanceof Date)
            return PagerColumn.DateRenderer()(v);
        else if (v instanceof Array) {
            return PagerColumn.ArrayRenderer()(v);
        }
        return v.toString();
    }; };
    PagerColumn.DateRenderer = function () { return function (v) { return moment(v).format("LL"); }; };
    PagerColumn.DateTimeRenderer = function () { return function (v) { return moment(v).format("LLL"); }; };
    PagerColumn.TimeRenderer = function () { return function (v) { return moment(v).format("LT"); }; };
    return PagerColumn;
}());

//# sourceMappingURL=data:application/json;base64,
