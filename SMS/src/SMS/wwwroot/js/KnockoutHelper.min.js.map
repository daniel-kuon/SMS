{"version":3,"sources":["/source/wwwroot/js/KnockoutHelper.ts"],"names":["CreateObservable","val","options","ob","ClientModel","Entity","ko","observable","undefined","ForeignKeyFor","AddTransferMode","UpdateTransferMode","CreateObservableArray","Array","observableArray","TransferMode"],"mappings":"AAEA,QAAAA,kBAAyDC,EAAsBC,GAC3E,GAAIC,EAaJ,OAZIF,aAAeG,aAAYC,OAC3BF,EAAKG,GAAGC,WAAmBN,IAE3BE,EAAKG,GAAGC,aACQC,SAAZN,IACAA,EAAUD,IAEFO,SAAZN,IACAC,EAAGM,cAAgBP,EAAQO,cAC3BN,EAAGO,gBAAkBR,EAAQQ,gBAC7BP,EAAGQ,mBAAqBT,EAAQS,oBAE7BR,EAMX,QAAAS,uBAA8DX,EAAsBC,GAChF,GAAIC,EAaJ,OAZIF,aAAeY,OACfV,EAAKG,GAAGQ,gBAAwBb,IAEhCE,EAAKG,GAAGQ,kBACQN,SAAZN,IACAA,EAAUD,IAEFO,SAAZN,IACAC,EAAGM,cAAgBP,EAAQO,cAC3BN,EAAGO,gBAAkBR,EAAQQ,gBAC7BP,EAAGQ,mBAAqBT,EAAQS,oBAE7BR,EAOX,GAAKY,eAAL,SAAKA,GACDA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,WAHCA,eAAAA","file":"wwwroot/js/KnockoutHelper.min.js","sourcesContent":["function CreateObservable<T extends ClientModel.IEntity>(options: IKoOptions): KnockoutObservable<T>;\r\nfunction CreateObservable<T extends ClientModel.IEntity>(val?: T, options?: IKoOptions): KnockoutObservable<T>;\r\nfunction CreateObservable<T extends ClientModel.IEntity>(val?: T | IKoOptions, options?: IKoOptions): KnockoutObservable<T> {\r\n    var ob: KnockoutObservable<T>;\r\n    if (val instanceof ClientModel.Entity)\r\n        ob = ko.observable<T>(<any>val);\r\n    else {\r\n        ob = ko.observable<T>();\r\n        if (options === undefined)\r\n            options = val;\r\n    }\r\n    if (options !== undefined) {\r\n        ob.ForeignKeyFor = options.ForeignKeyFor;\r\n        ob.AddTransferMode = options.AddTransferMode;\r\n        ob.UpdateTransferMode = options.UpdateTransferMode;\r\n    }\r\n    return ob;\r\n}\r\n\r\n\r\nfunction CreateObservableArray<T extends ClientModel.IEntity>(options: IKoOptions): KnockoutObservableArray<T>;\r\nfunction CreateObservableArray<T extends ClientModel.IEntity>(val?: T[], options?: IKoOptions): KnockoutObservableArray<T>;\r\nfunction CreateObservableArray<T extends ClientModel.IEntity>(val?: T[]|IKoOptions, options?: IKoOptions): KnockoutObservableArray<T> {\r\n    var ob: KnockoutObservableArray<T>;\r\n    if (val instanceof Array)\r\n        ob = ko.observableArray<T>(<T[]>val);\r\n    else {\r\n        ob = ko.observableArray<T>();\r\n        if (options === undefined)\r\n            options = val;\r\n    }\r\n    if (options !== undefined) {\r\n        ob.ForeignKeyFor = options.ForeignKeyFor;\r\n        ob.AddTransferMode = options.AddTransferMode;\r\n        ob.UpdateTransferMode = options.UpdateTransferMode;\r\n    }\r\n    return ob;\r\n}\r\n\r\ninterface KnockoutObservable<T> extends IKoOptions {\r\n\r\n}\r\n\r\nenum TransferMode {\r\n    Exclude,\r\n    IdOnly,\r\n    Include\r\n}\r\n\r\ninterface IKoOptions {\r\n    ForeignKeyFor?: KnockoutObservable<ClientModel.IEntity>;\r\n    AddTransferMode?: TransferMode;\r\n    UpdateTransferMode?: TransferMode;\r\n}"],"sourceRoot":"/source/"}